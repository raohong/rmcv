{"version":3,"file":"component---src-pages-demo-image-tsx-ccef9b33c6512f810a87.js","mappings":"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","sources":["webpack://gatsby-starter-blog/../node_modules/react-intersection-observer/react-intersection-observer.m.js","webpack://gatsby-starter-blog/../packages/components/src/image/Image.tsx","webpack://gatsby-starter-blog/../packages/components/src/_hooks/useValueRef.tsx","webpack://gatsby-starter-blog/../packages/components/src/_hooks/useUpdateEffect.tsx","webpack://gatsby-starter-blog/../packages/components/src/image/imageIcons.tsx","webpack://gatsby-starter-blog/../packages/components/src/loading/spinners/IOS.tsx","webpack://gatsby-starter-blog/../packages/components/src/loading/spinners/Material.tsx","webpack://gatsby-starter-blog/../packages/components/src/loading/Loading.tsx","webpack://gatsby-starter-blog/../packages/components/src/button/Button.tsx","webpack://gatsby-starter-blog/../packages/components/src/image/demos/index.tsx","webpack://gatsby-starter-blog/./src/pages/demo/image.tsx","webpack://gatsby-starter-blog/../node_modules/lodash/isArray.js","webpack://gatsby-starter-blog/../node_modules/lodash/isNull.js","webpack://gatsby-starter-blog/../node_modules/lodash/isString.js"],"sourcesContent":["import { createElement, Component, useRef, useState, useCallback, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ObserverMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get; // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n\n\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!element) return function () {}; // An observer with the same options can be reused, so lets use this fact\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap[\"delete\"](id);\n    }\n  };\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    });\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\"]);\n\n    return /*#__PURE__*/createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\n\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView;\n\n  var unobserve = useRef();\n\n  var _React$useState = useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      });\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport default InView;\nexport { InView, observe, useInView };","import React, { memo, useState } from 'react';\nimport classNames from 'classnames';\nimport Icon from '@rmc-vant/icons';\nimport { useInView } from 'react-intersection-observer';\nimport { useConfigContext } from '../config-provider';\nimport { useMergeRefs, useUpdateEffect, useValueRef } from '../_hooks';\nimport { ImageLoadErrorIcon, ImageLoadingIcon } from './imageIcons';\nimport type { ImageProps } from './interface';\n\nenum ImageLoadSatus {\n  LOADING = 'loading',\n  ERROR = 'error',\n  NONE = 'none',\n}\n\nconst Image = React.forwardRef<HTMLDivElement, ImageProps>(\n  (\n    {\n      className,\n      style,\n      src,\n      srcSet,\n      height,\n      radius,\n      round,\n      errorIcon,\n      loadingIcon,\n      lazyLoad,\n      alt,\n      onLoad,\n      onError,\n      showError = true,\n      showLoading = true,\n      fit = 'none',\n      width = '100%',\n      ...rest\n    },\n    ref,\n  ) => {\n    const { getPrefixCls } = useConfigContext();\n    const [status, setStatus] = useState(\n      lazyLoad ? ImageLoadSatus.NONE : ImageLoadSatus.LOADING,\n    );\n    const [inited, setInited] = useState(() => !lazyLoad);\n    const { inView, ref: intersectionObserverRef } = useInView();\n    const internalRef = useMergeRefs(\n      ref,\n      lazyLoad ? intersectionObserverRef : null,\n    );\n    const inViewRef = useValueRef(inView);\n    const lazyLoadRef = useValueRef(lazyLoad);\n    const initedRef = useValueRef(inited);\n\n    const internalSrc = src ?? srcSet;\n    const basCls = getPrefixCls('image');\n\n    useUpdateEffect(() => {\n      if (lazyLoadRef.current) {\n        // src 改变 lazyLoad 且不在视口且已经初始化 那么设置 inited: false\n        if (!inViewRef.current && initedRef.current) {\n          setInited(false);\n          // 在视口中改变一律设置为加载状态\n        } else if (inViewRef.current) {\n          setInited(true);\n          setStatus(ImageLoadSatus.LOADING);\n        }\n      } else {\n        setInited(true);\n        setStatus(ImageLoadSatus.LOADING);\n      }\n    }, [internalSrc, inViewRef, lazyLoadRef, initedRef]);\n\n    useUpdateEffect(() => {\n      if (!inited && inView) {\n        setInited(true);\n        setStatus(ImageLoadSatus.LOADING);\n      }\n    }, [inView, inited]);\n\n    const handleLoadError: React.ReactEventHandler<HTMLImageElement> = (\n      evt,\n    ) => {\n      setStatus(ImageLoadSatus.ERROR);\n      onError?.(evt);\n    };\n\n    const handleLoadSuccess: React.ReactEventHandler<HTMLImageElement> = (\n      evt,\n    ) => {\n      setStatus(ImageLoadSatus.NONE);\n      onLoad?.(evt);\n    };\n\n    const getImageProps = () => {\n      if (!inited) {\n        return {\n          'data-src': src,\n          'data-srcset': srcSet,\n        };\n      }\n\n      return {\n        src,\n        srcSet,\n      };\n    };\n\n    const renderPlaceholder = () => {\n      const placeholderCls = `${basCls}-placeholder`;\n\n      if (status === ImageLoadSatus.LOADING && showLoading) {\n        return (\n          <div className={placeholderCls}>\n            {loadingIcon ?? (\n              <Icon\n                component={ImageLoadingIcon}\n                className={`${basCls}-loading-icon`}\n              />\n            )}\n          </div>\n        );\n      }\n\n      if (status === ImageLoadSatus.ERROR && showError) {\n        <div className={placeholderCls}>\n          {errorIcon ?? (\n            <Icon\n              component={ImageLoadErrorIcon}\n              className={`${basCls}-error-icon`}\n            />\n          )}\n        </div>;\n      }\n\n      return null;\n    };\n\n    return (\n      <div\n        className={classNames(\n          basCls,\n          {\n            [`${basCls}-round`]: round,\n            [`${basCls}-${fit}`]: fit !== 'none',\n          },\n          className,\n        )}\n        style={{\n          ...style,\n          width,\n          height,\n          borderRadius: radius,\n        }}\n        ref={internalRef}\n        {...rest}\n      >\n        <img\n          className={`${basCls}-img`}\n          alt={alt}\n          onError={handleLoadError}\n          onLoad={handleLoadSuccess}\n          draggable={false}\n          {...getImageProps()}\n        />\n        {status !== ImageLoadSatus.NONE && renderPlaceholder()}\n      </div>\n    );\n  },\n);\n\nexport default memo(Image);\n","import { useRef } from 'react';\n\nconst useValueRef = <T extends unknown>(value: T) => {\n  const valueRef = useRef<T>(value);\n\n  valueRef.current = value;\n\n  return valueRef;\n};\n\nexport default useValueRef;\n","import { useEffect, useRef } from 'react';\n\nconst useUpdateEffect: typeof useEffect = (fn, deps) => {\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      return fn();\n    }\n\n    mounted.current = true;\n\n    return undefined;\n  }, deps);\n};\n\nexport default useUpdateEffect;\n","import React from 'react';\n\nexport const ImageLoadErrorIcon: React.FC = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    {...props}\n  >\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <path d=\"M0 0h32v32H0z\" />\n      <path\n        d=\"M12.444 5.333l-.592 1.778H3.556v12.445l2.298-2.3a1.778 1.778 0 012.348-.147l.168.148 2.297 2.299 3.292-3.952 3.819 5.73L16 26.666H3.556a1.779 1.779 0 01-1.766-1.57l-.012-.208V7.11c0-.913.687-1.663 1.57-1.766l.208-.012h8.888zm16 0c.913 0 1.664.686 1.766 1.57l.012.208V24.89c0 .911-.685 1.663-1.57 1.766l-.208.012h-8.888l1.777-5.334-5.399-8.1 2.276-2.728c.657-.79 1.83-.85 2.564-.176l.15.156 7.52 8.774V7.11H15.408L16 5.333h12.444zM9.78 8.888c.496 0 .96.136 1.359.372l-.471 1.407 1.449 2.173a2.667 2.667 0 11-2.337-3.952z\"\n        fill=\"currentColor\"\n      />\n    </g>\n  </svg>\n);\n\nexport const ImageLoadingIcon: React.FC = (props) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    {...props}\n  >\n    <g fill=\"none\" fillRule=\"evenodd\">\n      <path d=\"M0 0h32v32H0z\" />\n      <path\n        d=\"M9.779 8.888a2.668 2.668 0 000 5.334 2.668 2.668 0 000-5.334m11.145 1.597a1.776 1.776 0 00-2.714.02l-7.543 9.05-2.297-2.298a1.778 1.778 0 00-2.516 0l-2.298 2.299V7.11h24.888V19.26l-7.52-8.774zm7.52-5.152H3.556c-.982 0-1.778.795-1.778 1.778V24.89c0 .981.796 1.778 1.778 1.778h24.888c.984 0 1.778-.797 1.778-1.778V7.11c0-.983-.794-1.778-1.778-1.778z\"\n        fill=\"currentColor\"\n      />\n    </g>\n  </svg>\n);\n","import React from 'react';\n\nconst indexs = Array.from({ length: 12 }, (_, i) => i);\n\nexport const IOSSpinner: React.FC<{ className: string }> = ({ className }) => {\n  return (\n    <div className={className}>\n      {indexs.map((item) => (\n        <i key={item} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const MaterialSpinner: React.FC<{ className: string }> = ({\n  className,\n}) => {\n  return (\n    <svg\n      className={className}\n      viewBox=\"0 0 50 50\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle fill=\"none\" strokeWidth=\"3\" cx=\"25\" cy=\"25\" r=\"22\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useConfigContext } from '../config-provider';\nimport { IOSSpinner, MaterialSpinner } from './spinners';\nimport type { LoadingProps } from './interface';\n\nconst Loading = React.forwardRef<HTMLSpanElement, LoadingProps>(\n  (\n    {\n      type,\n      size,\n      className,\n      color,\n      textColor,\n      textSize,\n      vertical,\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { getPrefixCls } = useConfigContext();\n    const prefixCls = getPrefixCls('loading');\n\n    const cls = classNames(\n      prefixCls,\n      {\n        [`${prefixCls}-vertical`]: vertical,\n      },\n      className,\n    );\n\n    return (\n      <span\n        ref={ref}\n        className={cls}\n        role=\"alert\"\n        aria-label=\"loading\"\n        {...rest}\n      >\n        <div\n          className={getPrefixCls('loading-spinner')}\n          style={{\n            color,\n            fontSize: size,\n          }}\n        >\n          {type === 'circle' ? (\n            <IOSSpinner className={getPrefixCls('loading-ios-spinner')} />\n          ) : (\n            <MaterialSpinner\n              className={getPrefixCls('loading-material-spinner')}\n            />\n          )}\n        </div>\n        {children && (\n          <span\n            className={getPrefixCls('loading-text')}\n            style={{\n              color: textColor,\n              fontSize: textSize,\n            }}\n          >\n            {children}\n          </span>\n        )}\n      </span>\n    );\n  },\n);\n\nexport default Loading;\n","import React from 'react';\nimport isNull from 'lodash/isNull';\nimport isString from 'lodash/isString';\nimport classNames from 'classnames';\nimport Loading from '../loading';\nimport { useConfigContext } from '../config-provider';\nimport type { ButtonProps, WithButton } from './interface';\nimport Touchable from '../touchable';\n\nconst isReactText = (child: React.ReactNode): child is React.ReactText =>\n  isString(child) || isNull(child);\n\nconst Button = React.forwardRef<HTMLElement, ButtonProps>(\n  (\n    {\n      href,\n      target,\n      htmlType,\n      onClick,\n      loading,\n      icon,\n      plain,\n      disabled,\n      className,\n      children,\n      block,\n      loadingText,\n      loadingType,\n      type,\n      hairline = true,\n      loadingSize = 20,\n      size = 'default',\n      shape = 'square',\n      ...rest\n    },\n    ref,\n  ) => {\n    const { getPrefixCls } = useConfigContext();\n    const baseCls = getPrefixCls('button');\n\n    const handleClick: React.MouseEventHandler<\n      HTMLAnchorElement | HTMLButtonElement\n    > = (evt) => {\n      if (loading || disabled) {\n        return;\n      }\n\n      onClick?.(evt);\n    };\n\n    const cls = classNames(\n      baseCls,\n      {\n        [`${baseCls}-loading`]: loading,\n        [`${baseCls}-disabled`]: disabled,\n        [`${baseCls}-plain`]: plain,\n        [`${baseCls}-hairline`]: hairline,\n        [`${baseCls}-block`]: block,\n        [`${baseCls}-${size}`]: size !== 'default' && size,\n        [`${baseCls}-${type}`]: type,\n        [`${baseCls}-${shape}`]: shape,\n      },\n      className,\n    );\n\n    const renderChildren = () => {\n      const hasIcon = loading || !!icon;\n      const targetChildren = loading ? null : children;\n\n      return (\n        <>\n          {hasIcon && (\n            <div className={`${baseCls}-icon`}>\n              {loading ? (\n                <Loading\n                  type={loadingType}\n                  size={loadingSize}\n                  color={!type ? undefined : '#fff'}\n                  textColor={!type ? undefined : '#fff'}\n                >\n                  {loadingText}\n                </Loading>\n              ) : (\n                icon\n              )}\n            </div>\n          )}\n          {isReactText(targetChildren) ? (\n            <span>{targetChildren}</span>\n          ) : (\n            targetChildren\n          )}\n        </>\n      );\n    };\n\n    const isLink = target ?? href;\n\n    return isLink ? (\n      <Touchable\n        component=\"a\"\n        touchDisabled={disabled}\n        activeClassName={`${baseCls}-active`}\n        className={cls}\n        href={href}\n        target={target}\n        role=\"button\"\n        aria-disabled={disabled}\n        // todo 为什么这里 ref 不是 AnchorElement\n        // @ts-ignore\n        onClick={handleClick as React.MouseEventHandler<HTMLAnchorElement>}\n        // @ts-ignore\n        ref={ref as unknown as React.Ref<HTMLAnchorElement>}\n        {...rest}\n      >\n        {renderChildren()}\n      </Touchable>\n    ) : (\n      <Touchable\n        component=\"button\"\n        touchDisabled={disabled}\n        activeClassName={`${baseCls}-active`}\n        className={cls}\n        disabled={disabled}\n        type={htmlType}\n        aria-disabled={disabled}\n        // @ts-ignore\n        onClick={handleClick as React.MouseEventHandler<HTMLButtonElement>}\n        // @ts-ignore\n        ref={ref as unknown as React.Ref<HTMLButtonElement>}\n        {...rest}\n      >\n        {renderChildren()}\n      </Touchable>\n    );\n  },\n);\n\nexport default Button as WithButton;\n","import React, { useState } from 'react';\nimport { Image, Button } from 'rmc-vant';\n\nexport default () => {\n  const [i, set] = useState(2);\n\n  const images = [\n    'https://images.unsplash.com/photo-1569949381669-ecf31ae8e613?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8dG91cnxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60',\n    'https://images.unsplash.com/photo-1528127269322-539801943592?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8dG91cnxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60',\n    'https://images.unsplash.com/photo-1595614007536-6e6a8ef82139?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mjd8fHRvdXJ8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60',\n  ];\n\n  return (\n    <div>\n      <Image fit=\"contain\" src={images[0]} height={100} lazyLoad />\n      <Image fit=\"scale-down\" src={images[1]} height={100} lazyLoad />\n      <Image src={images[i]} height={100} lazyLoad />\n\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          set((i + 1) % images.length);\n        }}\n      >\n        CHANGE\n      </Button>\n    </div>\n  );\n};\n","import React from 'react';\n// @ts-ignore\nimport Com from '/Users/raohong/code/libary/rmc-vant/packages/components/src/image/demos';\n\n// @ts-ignore\nexport default (props) => <Com {...props} />;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","ObserverMap","Map","RootIds","WeakMap","rootId","optionsToId","options","keys","sort","filter","undefined","map","root","has","set","toString","get","observe","element","callback","_createObserver","id","instance","thresholds","elements","observer","IntersectionObserver","entries","forEach","entry","_elements$get","inView","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","unobserve","size","disconnect","isPlainChildren","props","children","InView","_React$Component","subClass","superClass","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","constructor","__proto__","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","tag","excluded","sourceKeys","_objectWithoutPropertiesLoose","createElement","Component","displayName","defaultProps","ImageLoadSatus","value","valueRef","useRef","current","fn","deps","mounted","useEffect","ImageLoadingIcon","xmlns","xmlnsXlink","fill","fillRule","d","Image","React","className","style","src","srcSet","height","radius","round","errorIcon","loadingIcon","lazyLoad","alt","onLoad","onError","showError","showLoading","fit","width","rest","getPrefixCls","useConfigContext","useState","NONE","LOADING","status","setStatus","inited","setInited","_temp","_ref","_React$useState","setRef","useCallback","result","useInView","intersectionObserverRef","internalRef","useMergeRefs","inViewRef","useValueRef","lazyLoadRef","initedRef","internalSrc","basCls","useUpdateEffect","placeholderCls","classNames","borderRadius","evt","ERROR","draggable","component","memo","indexs","from","_","IOSSpinner","item","MaterialSpinner","viewBox","strokeWidth","cx","cy","r","type","color","textColor","textSize","vertical","prefixCls","cls","role","fontSize","href","htmlType","onClick","loading","icon","plain","disabled","block","loadingText","loadingType","hairline","loadingSize","shape","baseCls","handleClick","renderChildren","child","hasIcon","targetChildren","isString","isNull","Touchable","touchDisabled","activeClassName","images","module","exports","baseGetTag","isObjectLike"],"sourceRoot":""}